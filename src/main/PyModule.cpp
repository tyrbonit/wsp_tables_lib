#include <pybind11/stl.h>
#include <WspTablesLib.h>


using namespace std;
using namespace wsptables;

namespace py = pybind11;

PYBIND11_MODULE(wsptables, m) {


    m.def("wsp_PST", (double (*)(double)) &wsp_PST, "Давление насыщения[кгс/см²] по температуре[°C]", py::arg("T"));// = "WSP - Давление воды и пара"

    m.def("wsp_PSS", (double (*)(double)) &wsp_PSS, "Давление насыщения[кгс/см²] по энтропии[ккал/кг°C]", py::arg("s"));// = "WSP - Давление воды и пара"

    m.def("wsp_PSH", (double (*)(double)) &wsp_PSH, "Давление насыщения[кгс/см²] по энтальпии[ккал/кг]", py::arg("h"));// = "WSP - Давление воды и пара"

    m.def("wsp_PHS", (double (*)(double, double)) &wsp_PHS, "Давление[кгс/см²] по энтальпии[ккал/кг] и энтропии[ккал/кг°C]", py::arg("h"), py::arg("s"));// = "WSP - Давление воды и пара"

    m.def("wsp_TSP", (double (*)(double)) &wsp_TSP, "Температура насыщения[°C] по давлению[кгс/см²]", py::arg("p"));// = "WSP - Температура воды и пара"

    m.def("wsp_TSS", (double (*)(double)) &wsp_TSS, "Температура насыщения[°C] по энтропии[ккал/кг°C]", py::arg("s"));// = "WSP - Температура воды и пара"

    m.def("wsp_TPH", (double (*)(double, double)) &wsp_TPH, "Температура[°C] по давлению[кгс/см²] и энтальпии[ккал/кг] ", py::arg("p"), py::arg("h"));// = "WSP - Температура воды и пара"

    m.def("wsp_TPS", (double (*)(double, double)) &wsp_TPS, "Температура[°C] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Температура воды и пара"

    m.def("wsp_THS", (double (*)(double, double)) &wsp_THS, "Температура[°C] по энтальпии[ккал/кг] и энтропии[ккал/кг°C]", py::arg("h"), py::arg("s"));// = "WSP - Температура воды и пара"

    m.def("wsp_HSSP", (double (*)(double)) &wsp_HSSP, "Удельная энтальпия сухого насыщенного пара[ккал/кг] по давлению[кгс/см²]", py::arg("p"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HSWP", (double (*)(double)) &wsp_HSWP, "Удельная энтальпия кипящей воды[ккал/кг] по давлению[кгс/см²]", py::arg("p"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HSST", (double (*)(double)) &wsp_HSST, "Удельная энтальпия[ккал/кг] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HSWT", (double (*)(double)) &wsp_HSWT, "Удельная энтальпия[ккал/кг] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HPT", (double (*)(double, double)) &wsp_HPT, "Удельная энтальпия[ккал/кг] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HPS", (double (*)(double, double)) &wsp_HPS, "Удельная энтальпия[ккал/кг] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HSPX", (double (*)(double, double)) &wsp_HSPX, "Удельная энтальпия[ккал/кг] влажного пара по давлению[кгс/см²] и степени сухости", py::arg("p"), py::arg("x"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HSTX", (double (*)(double, double)) &wsp_HSTX, "Удельная энтальпия[ккал/кг] влажного пара по температуре[°C] и степени сухости", py::arg("T"), py::arg("x"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_HPD", (double (*)(double, double)) &wsp_HPD, "Удельная энтальпия[ккал/кг] по давлению[кгс/см²] и плотности[кг/м³]", py::arg("p"), py::arg("rho"));// = "WSP - Энтальпия воды и пара"

    m.def("wsp_VSSP", (double (*)(double)) &wsp_VSSP, "Удельный объем[м³/кг] сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_VSWP", (double (*)(double)) &wsp_VSWP, "Удельный объем[м³/кг] кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_VSST", (double (*)(double)) &wsp_VSST, "Удельный объем[м³/кг] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_VSWT", (double (*)(double)) &wsp_VSWT, "Удельный объем[м³/кг] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_VPT", (double (*)(double, double)) &wsp_VPT, "Удельный объем[м³/кг] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_VPH", (double (*)(double, double)) &wsp_VPH, "Удельный объем[м³/кг] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_VPS", (double (*)(double, double)) &wsp_VPS, "Удельный объем[м³/кг] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Удельный объем воды и пара"

    m.def("wsp_DSSP", (double (*)(double)) &wsp_DSSP, "Плотность[кг/м³] сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Плотность воды и пара"

    m.def("wsp_DSWP", (double (*)(double)) &wsp_DSWP, "Плотность[кг/м³] кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Плотность воды и пара"

    m.def("wsp_DSST", (double (*)(double)) &wsp_DSST, "Плотность[кг/м³] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Плотность воды и пара"

    m.def("wsp_DSWT", (double (*)(double)) &wsp_DSWT, "Плотность[кг/м³] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Плотность воды и пара"

    m.def("wsp_DPT", (double (*)(double, double)) &wsp_DPT, "Плотность[кг/м³] воды по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Плотность воды и пара"

    m.def("wsp_DPH", (double (*)(double, double)) &wsp_DPH, "Плотность[кг/м³] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Плотность воды и пара"

    m.def("wsp_DPS", (double (*)(double, double)) &wsp_DPS, "Плотность[кг/м³] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Плотность воды и пара"

    m.def("wsp_SSSP", (double (*)(double)) &wsp_SSSP, "Удельная энтропия[ккал/кг°C] сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Энтропия воды и пара"

    m.def("wsp_SSWP", (double (*)(double)) &wsp_SSWP, "Удельная энтропия[ккал/кг°C] кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Энтропия воды и пара"

    m.def("wsp_SSST", (double (*)(double)) &wsp_SSST, "Удельная энтропия[ккал/кг°C] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Энтропия воды и пара"

    m.def("wsp_SSWT", (double (*)(double)) &wsp_SSWT, "Удельная энтропия[ккал/кг°C] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Энтропия воды и пара"

    m.def("wsp_SPT", (double (*)(double, double)) &wsp_SPT, "Удельная энтропия[ккал/кг°C] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Энтропия воды и пара"

    m.def("wsp_SPH", (double (*)(double, double)) &wsp_SPH, "Удельная энтропия[ккал/кг°C] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Энтропия воды и пара"

    m.def("wsp_USSP", (double (*)(double)) &wsp_USSP, "Удельная внутренняя энергия[ккал/кг] сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_USWP", (double (*)(double)) &wsp_USWP, "Удельная внутренняя энергия[ккал/кг] кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_USST", (double (*)(double)) &wsp_USST, "Удельная внутренняя энергия[ккал/кг] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_USWT", (double (*)(double)) &wsp_USWT, "Удельная внутренняя энергия[ккал/кг] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_UPT", (double (*)(double, double)) &wsp_UPT, "Удельная внутренняя энергия[ккал/кг] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_UPH", (double (*)(double, double)) &wsp_UPH, "Удельная внутренняя энергия[ккал/кг] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_UPS", (double (*)(double, double)) &wsp_UPS, "Удельная внутренняя энергия[ккал/кг] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Внутренняя энергия воды и пара"

    m.def("wsp_CPSSP", (double (*)(double)) &wsp_CPSSP, "Изобарная теплоемкость[ккал/кг°C] сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CPSWP", (double (*)(double)) &wsp_CPSWP, "Изобарная теплоемкость[ккал/кг°C] кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CPSST", (double (*)(double)) &wsp_CPSST, "Изобарная теплоемкость[ккал/кг°C] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CPSWT", (double (*)(double)) &wsp_CPSWT, "Изобарная теплоемкость[ккал/кг°C] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CPPT", (double (*)(double, double)) &wsp_CPPT, "Изобарная теплоемкость[ккал/кг°C] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CPPH", (double (*)(double, double)) &wsp_CPPH, "Изобарная теплоемкость[ккал/кг°C] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CPPS", (double (*)(double, double)) &wsp_CPPS, "Изобарная теплоемкость[ккал/кг°C] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVSSP", (double (*)(double)) &wsp_CVSSP, "Изохорная теплоемкость[ккал/кг°C] сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVSWP", (double (*)(double)) &wsp_CVSWP, "Изохорная теплоемкость[ккал/кг°C] кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVSST", (double (*)(double)) &wsp_CVSST, "Изохорная теплоемкость[ккал/кг°C] сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVSWT", (double (*)(double)) &wsp_CVSWT, "Изохорная теплоемкость[ккал/кг°C] кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVPT", (double (*)(double, double)) &wsp_CVPT, "Изохорная теплоемкость[ккал/кг°C] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVPH", (double (*)(double, double)) &wsp_CVPH, "Изохорная теплоемкость[ккал/кг°C] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_CVPS", (double (*)(double, double)) &wsp_CVPS, "Изохорная теплоемкость[ккал/кг°C] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Теплоемкость воды и пара"

    m.def("wsp_WSSP", (double (*)(double)) &wsp_WSSP, "Скорость звука[м/с] в сухом насыщенном паре по давлению[кгс/см²]", py::arg("p"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_WSWP", (double (*)(double)) &wsp_WSWP, "Скорость звука[м/с] в кипящей воде по давлению[кгс/см²]", py::arg("p"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_WSST", (double (*)(double)) &wsp_WSST, "Скорость звука[м/с] в сухом насыщенном паре по температуре[°C]", py::arg("T"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_WSWT", (double (*)(double)) &wsp_WSWT, "Скорость звука[м/с] в кипящей воде по температуре[°C]", py::arg("T"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_WPT", (double (*)(double, double)) &wsp_WPT, "Скорость звука[м/с] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_WPH", (double (*)(double, double)) &wsp_WPH, "Скорость звука[м/с] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_WPS", (double (*)(double, double)) &wsp_WPS, "Скорость звука[м/с] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Скорость звука в воде и паре"

    m.def("wsp_XPH", (double (*)(double, double)) &wsp_XPH, "Степень сухости[-] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Степень сухости воды и пара"

    m.def("wsp_XPS", (double (*)(double, double)) &wsp_XPS, "Степень сухости[-] по давлению[кгс/см²] и энтропии[ккал/кг]", py::arg("p"), py::arg("s"));// = "WSP - Степень сухости воды и пара"

    m.def("wsp_VXPH", (double (*)(double, double)) &wsp_VXPH, "Объемная степень сухости[-] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Степень сухости воды и пара"

    m.def("wsp_VXPS", (double (*)(double, double)) &wsp_VXPS, "Объемная степень сухости[-] по давлению[кгс/см²] и энтропии[ккал/кг]", py::arg("p"), py::arg("s"));// = "WSP - Степень сухости воды и пара"

    m.def("wsp_DYNVISPT", (double (*)(double, double)) &wsp_DYNVISPT, "Динамическая вязкость[Па·с] по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Вязкость воды и пара"

    m.def("wsp_DYNVISPH", (double (*)(double, double)) &wsp_DYNVISPH, "Динамическая вязкость[Па·с] по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Вязкость воды и пара"

    m.def("wsp_DYNVISPS", (double (*)(double, double)) &wsp_DYNVISPS, "Динамическая вязкость[Па·с] по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Вязкость воды и пара"

    m.def("wsp_SURFTENT", (double (*)(double)) &wsp_SURFTENT, "Поверхностное натяжение воды[н/м] по температуре[°C]", py::arg("T"));// = "WSP - Поверхностное натяжение воды"

    m.def("wsp_SURFTENP", (double (*)(double)) &wsp_SURFTENP, "Поверхностное натяжение воды[н/м] по давлению[кгс/см²]", py::arg("p"));// = "WSP - Поверхностное натяжение воды"

    m.def("wsp_THERMCONDSSP", (double (*)(double)) &wsp_THERMCONDSSP, "Теплопроводность[Вт/(м·К сухого насыщенного пара по давлению[кгс/см²]", py::arg("p"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_THERMCONDSWP", (double (*)(double)) &wsp_THERMCONDSWP, "Теплопроводность[Вт/(м·К кипящей воды по давлению[кгс/см²]", py::arg("p"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_THERMCONDSST", (double (*)(double)) &wsp_THERMCONDSST, "Теплопроводность[Вт/(м·К сухого насыщенного пара по температуре[°C]", py::arg("T"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_THERMCONDSWT", (double (*)(double)) &wsp_THERMCONDSWT, "Теплопроводность[Вт/(м·К кипящей воды по температуре[°C]", py::arg("T"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_THERMCONDPT", (double (*)(double, double)) &wsp_THERMCONDPT, "Теплопроводность[Вт/(м·К по давлению[кгс/см²] и температуре[°C]", py::arg("p"), py::arg("T"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_THERMCONDPH", (double (*)(double, double)) &wsp_THERMCONDPH, "Теплопроводность[Вт/(м·К по давлению[кгс/см²] и энтальпии[ккал/кг]", py::arg("p"), py::arg("h"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_THERMCONDPS", (double (*)(double, double)) &wsp_THERMCONDPS, "Теплопроводность[Вт/(м·К по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Теплопроводность воды и пара"

    m.def("wsp_Region_PS", (int (*)(double, double)) &wsp_Region_PS, "Регион IAPWS-IF97 по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Регионы воды и пара"

    m.def("wsp_Region_PS1", (int (*)(double, double)) &wsp_Region_PS1, "Регион IAPWS-IF97 по давлению[кгс/см²] и энтропии[ккал/кг°C]", py::arg("p"), py::arg("s"));// = "WSP - Регионы воды и пара"

}




